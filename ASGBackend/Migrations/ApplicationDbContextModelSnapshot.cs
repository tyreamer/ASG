// <auto-generated />
using ASGBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASGBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASGShared.Models.DietaryRestrictions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsGlutenFree")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPescatarian")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVegan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVegetarian")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DietaryRestrictions");
                });

            modelBuilder.Entity("ASGShared.Models.DietaryRestrictionsUser", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DietaryRestrictionsId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "DietaryRestrictionsId");

                    b.HasIndex("DietaryRestrictionsId");

                    b.ToTable("DietaryRestrictionsUsers");
                });

            modelBuilder.Entity("ASGShared.Models.NutritionalGoals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("HighProtein")
                        .HasColumnType("bit");

                    b.Property<bool>("LowCarb")
                        .HasColumnType("bit");

                    b.Property<bool>("LowFat")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("NutritionalGoals");
                });

            modelBuilder.Entity("ASGShared.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CookingSkillLevel")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseholdSize")
                        .HasColumnType("int");

                    b.Property<bool>("IsAuthenticated")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreferencesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PreferencesId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ASGShared.Models.UserPreferences", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Allergies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CalorieTarget")
                        .HasColumnType("int");

                    b.Property<int>("DietaryRestrictionsId")
                        .HasColumnType("int");

                    b.Property<string>("DislikedFoods")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FavoriteCuisines")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NutritionalGoalsId")
                        .HasColumnType("int");

                    b.Property<int>("TotalMealsPerWeek")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DietaryRestrictionsId");

                    b.HasIndex("NutritionalGoalsId");

                    b.ToTable("UserPreferences");
                });

            modelBuilder.Entity("ASGShared.Models.DietaryRestrictionsUser", b =>
                {
                    b.HasOne("ASGShared.Models.DietaryRestrictions", "DietaryRestrictions")
                        .WithMany()
                        .HasForeignKey("DietaryRestrictionsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ASGShared.Models.User", "User")
                        .WithMany("DietaryRestrictionsUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DietaryRestrictions");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASGShared.Models.NutritionalGoals", b =>
                {
                    b.HasOne("ASGShared.Models.User", null)
                        .WithMany("NutritionalGoals")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ASGShared.Models.User", b =>
                {
                    b.HasOne("ASGShared.Models.UserPreferences", "Preferences")
                        .WithMany()
                        .HasForeignKey("PreferencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ASGShared.Models.Budget", "BudgetPerMeal", b1 =>
                        {
                            b1.Property<string>("UserId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("BudgetPerMeal")
                        .IsRequired();

                    b.Navigation("Preferences");
                });

            modelBuilder.Entity("ASGShared.Models.UserPreferences", b =>
                {
                    b.HasOne("ASGShared.Models.DietaryRestrictions", "DietaryRestrictions")
                        .WithMany()
                        .HasForeignKey("DietaryRestrictionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASGShared.Models.NutritionalGoals", "NutritionalGoals")
                        .WithMany()
                        .HasForeignKey("NutritionalGoalsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DietaryRestrictions");

                    b.Navigation("NutritionalGoals");
                });

            modelBuilder.Entity("ASGShared.Models.User", b =>
                {
                    b.Navigation("DietaryRestrictionsUsers");

                    b.Navigation("NutritionalGoals");
                });
#pragma warning restore 612, 618
        }
    }
}
