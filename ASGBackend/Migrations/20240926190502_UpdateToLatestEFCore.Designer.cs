// <auto-generated />
using System;
using ASGBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASGBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240926190502_UpdateToLatestEFCore")]
    partial class UpdateToLatestEFCore
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASGShared.Models.MealPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WeekStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MealPlans");
                });

            modelBuilder.Entity("ASGShared.Models.MealPlanRecipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("MealPlanId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MealPlanId");

                    b.HasIndex("RecipeId");

                    b.ToTable("MealPlanRecipes");
                });

            modelBuilder.Entity("ASGShared.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Calories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuisineType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrepTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("ASGShared.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CookingSkillLevel")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseholdSize")
                        .HasColumnType("int");

                    b.Property<bool>("IsAuthenticated")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ASGShared.Models.MealPlanRecipe", b =>
                {
                    b.HasOne("ASGShared.Models.MealPlan", "MealPlan")
                        .WithMany("Recipes")
                        .HasForeignKey("MealPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASGShared.Models.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MealPlan");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("ASGShared.Models.User", b =>
                {
                    b.OwnsOne("ASGShared.Models.Budget", "BudgetPerMeal", b1 =>
                        {
                            b1.Property<string>("UserId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("ASGShared.Models.UserPreferences", "Preferences", b1 =>
                        {
                            b1.Property<string>("UserId1")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Allergies")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("CalorieTarget")
                                .HasColumnType("int");

                            b1.Property<string>("DislikedFoods")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FavoriteCuisines")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<int>("TotalMealsPerWeek")
                                .HasColumnType("int");

                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.HasKey("UserId1");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId1");

                            b1.OwnsOne("ASGShared.Models.DietaryRestrictions", "DietaryRestrictions", b2 =>
                                {
                                    b2.Property<string>("UserPreferencesUserId1")
                                        .HasColumnType("nvarchar(450)");

                                    b2.Property<bool>("IsGlutenFree")
                                        .HasColumnType("bit");

                                    b2.Property<bool>("IsPescatarian")
                                        .HasColumnType("bit");

                                    b2.Property<bool>("IsVegan")
                                        .HasColumnType("bit");

                                    b2.Property<bool>("IsVegetarian")
                                        .HasColumnType("bit");

                                    b2.HasKey("UserPreferencesUserId1");

                                    b2.ToTable("Users");

                                    b2.WithOwner()
                                        .HasForeignKey("UserPreferencesUserId1");
                                });

                            b1.OwnsOne("ASGShared.Models.NutritionalGoals", "NutritionalGoals", b2 =>
                                {
                                    b2.Property<string>("UserPreferencesUserId1")
                                        .HasColumnType("nvarchar(450)");

                                    b2.Property<bool>("HighProtein")
                                        .HasColumnType("bit");

                                    b2.Property<bool>("LowCarb")
                                        .HasColumnType("bit");

                                    b2.Property<bool>("LowFat")
                                        .HasColumnType("bit");

                                    b2.HasKey("UserPreferencesUserId1");

                                    b2.ToTable("Users");

                                    b2.WithOwner()
                                        .HasForeignKey("UserPreferencesUserId1");
                                });

                            b1.Navigation("DietaryRestrictions")
                                .IsRequired();

                            b1.Navigation("NutritionalGoals")
                                .IsRequired();
                        });

                    b.Navigation("BudgetPerMeal")
                        .IsRequired();

                    b.Navigation("Preferences")
                        .IsRequired();
                });

            modelBuilder.Entity("ASGShared.Models.MealPlan", b =>
                {
                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
