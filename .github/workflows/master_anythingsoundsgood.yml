name: anythingsoundsgood backend

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      # Debugging step to confirm paths (optional)
      - name: List files for debugging
        run: ls -R

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Build with dotnet
        run: dotnet build --configuration Release ./ASGBackend/ASGBackend.csproj

      - name: dotnet publish
        run: dotnet publish -c Release -o ./ASGBackend ./ASGBackend/ASGBackend.csproj

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ./ASGBackend

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: Set environment variables
        env:
          ASG_DB_CONNECTION_STRING: ${{ secrets.ASG_DB_CONNECTION_STRING }}
        run: echo "Environment variables set."

      # Install EF Tools
      - name: Install EF Tools
        run: dotnet tool install --global dotnet-ef

      # Apply EF Migrations using full path
      - name: Apply EF Migrations
        run: dotnet ef database update --connection $ASG_DB_CONNECTION_STRING --project D:/a/ASG/ASG/ASGBackend/ASGBackend.csproj
        env:
          ASG_DB_CONNECTION_STRING: ${{ secrets.ASG_DB_CONNECTION_STRING }}

      # Decode Firebase credentials and deploy
      - name: Decode Firebase credentials
        run: |
          echo $GOOGLE_APPLICATION_CREDENTIALS_B64 | base64 --decode > $GITHUB_WORKSPACE/firebase_credentials.json
        shell: bash

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        env:
          GOOGLE_APPLICATION_CREDENTIALS: $GITHUB_WORKSPACE/firebase_credentials.json
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'anythingsoundsgood'
          slot-name: 'Production'
          package: .
